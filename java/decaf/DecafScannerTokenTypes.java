package decaf;
public interface DecafScannerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int TK_class = 4;
	int TK_int = 5;
	int TK_else = 6;
	int TK_boolean = 7;
	int TK_void = 8;
	int TK_if = 9;
	int TK_return = 10;
	int TK_false = 11;
	int TK_callout = 12;
	int TK_continue = 13;
	int TK_break = 14;
	int TK_for = 15;
	int TK_true = 16;
	int LCURLY = 17;
	int RCURLY = 18;
	int BLEFT = 19;
	int BRIGHT = 20;
	int NOT = 21;
	int PEQUALS = 22;
	int SEQUALS = 23;
	int SEMICOLON = 24;
	int COMMA = 25;
	int PLUS = 26;
	int MULTIPLY = 27;
	int PERCENT = 28;
	int DIVIDE = 29;
	int MINUS = 30;
	int HIGHER = 31;
	int LOWER = 32;
	int NEQUAL = 33;
	int EQUIV = 34;
	int LEQUAL = 35;
	int HEQUAL = 36;
	int DAND = 37;
	int DOR = 38;
	int EQUALS = 39;
	int SRIGHT = 40;
	int SLEFT = 41;
	int DIGIT = 42;
	int HEX_DIGIT = 43;
	int ALPHA = 44;
	int ALPHA_NUM = 45;
	int ESC = 46;
	int VALIDCHAR = 47;
	int HEX_LITERAL = 48;
	int ID = 49;
	int CHAR_LITERAL = 50;
	int STRING = 51;
	int WS_ = 52;
	int SL_COMMENT = 53;
	int DECIMAL_LITERAL = 54;
}
